
Az Allapot modul a jelenlegi formájában nem jó!!
	problémák:
		lehet [esp - 4] -jellegű, változó-szerű hivatkozással címezni a vermet
			példa:
				mov ebp, esp; push dword 1; push dword 2; push dword 3;
					verem ~ 0 0 0 1 | 0 0 0 2 | 0 0 0 3
					alja	|ebp					  |esp		- pointerhelyek
				[ebp - 8] == 2;	[ebp - 7] == 2^24 - 1;	[ebp - 9] == 2 * 2^8 (512)
				[esp] == 3;		[esp + 4] == 2;			[esp + 8] == 1				// mind dword meret
				azaz a veremből a verem alja fele haladva ("balra") veszi ki a változókat, az elsőként kivett a legkisebb helyiértékű
			ezzel az a gond, hogy a változók vektorából viszont ellenkező irányba veszünk ki
				x: db 0, 1, 2, 3; y: dw 4; z: dw 5, 6
					valtozok:	0 1 2 3	4 0	5 0 6 0
								x		y	z
					dword [x] == [0 1 2 3]; dword [x + 4] == [4 0 5 0]
				azaz változók esetén a "legbaloldalibb" byte (változók lefoglalásakor legelsőnek kapott) sorszámát adjuk meg, és jobbra haladva vesszük ki a byteokat, az elsőként kivett a legkisebb helyiértékű
		-> megoldás:
			a szemantikus elemzés során számon tartjuk, hogy az adott 'ertek' / 'elsoarg' tartalmaz-e 'esp' / 'ebp' regiszterre hivatkozást
				amennyiben tartalmaz, és van []-hivatkozás, akkor a veremből próbál kivenni
				amennyiben nem tartalmaz, akkor a változó-vektorból próbál kivenni
			esp, ebp pointereket nempozitív ( <=0 ) számmá alakítjuk fv-el (Utils::vecc2sint, Utils::sint2vecc), a szám abszolútértéke jelöli azt, hogy a veremben hova mutat (0 -> verem alja, 4 -> verem 4.bytejának alja (0-tól indexelve))
				[255 255 255 255] == 0 helyett szükséges lehet egy eltolás -> legyen [255 255 255 15] == 0 (verem alja) - így ez (0x0FFFFFFF) és a -1-szerese is int-ben elfér
					amennyiben levonunk, akkor a verem mérete nő, a vektorban a számok értéke csökken (utolsó -> legkisebb helyiérték)
			egyéb változókat, regisztereket rendesen, számmá konvertálva kezelünk
			kivétel módja: a get_var fv módosítása: +1 bool bemenő paraméter, alapértelmezetten 0
					amennyiben 0 -> változókból, normális módon vesz ki
					amennyiben 1 -> veremből vesz ki
				veremből kivétel esetén negatív bemenő paramétert kap (amin így az [esp - 4] és hasonló effektek megfelelő irányba hatnak), ennek abszolútértéke jelöli a kivételre kerülő első byteját
					a verem alja felé halad, azaz az abszolútérték után kivonódik belőle
				megfelelő ellenőrzések : pop -> üres verem; get_var( ., ., 0)) -> elso >= 0, elso+meret < max_valt; get_var( ., ., 1)) -> elso - meret >= 0, elso < esp (vagy verem_max)
			ezek a változtatások az 'Allapot' illetve az 'interpretParser' osztály módosítását teszik szükségessé
				illetve az 'Allapot' tesztjének módosítását
				
	egyéb:
		interpret - második argumentum kezelés
			masodarg nemterm, <int> szemantikus értékkel
			masodarg -> ertek | [ ertek ]
		interpret - AP_UI-kat visszacserélni sima signed intre ('ertek' szemantikus értéke)
			(? IGEN?)
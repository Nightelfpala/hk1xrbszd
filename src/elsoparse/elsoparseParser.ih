

#include "elsoparseParser.h"

inline elsoparseParser::elsoparseParser( std::istream &in) : lexer( &in, &std::cerr ), utasitasszam(0)
{
	
}

inline elsoparseParser::~elsoparseParser()
{
	
}

inline void elsoparseParser::error(char const *msg)
{
	
    // TODO error msg
}

inline int elsoparseParser::lex()
{
    d_loc__.first_line = lexer.lineno();
	int ret = lexer.yylex();
	if (ret == AZONOSITO or ret == SZAM or ret == REGISZTER or ret == KETARGUMENTUMOS or ret == EGYARGUMENTUMOS or ret == UGROUTAS)
	{
		d_val__.szoveg = new std::string(lexer.YYText());
	}
    return ret;
}

inline void elsoparseParser::print()         
{
    print__();
}

inline void elsoparseParser::exceptionHandler__(std::exception const &exc)		// http://bisoncpp.sourceforge.net/bisonc++06.html 6.3
{
	throw;  // re-implement to handle exceptions thrown by actions
}

int elsoparseParser::getRegSize(std::string reg)
{	// undefined behaviour with flag registers
	if (reg[0] == 'e')
	{
		return 4;
	} else if (reg[1] == 'p' || reg[1] == 'x')
	{
		return 2;
	} else
	{
		return 1;
	}
}